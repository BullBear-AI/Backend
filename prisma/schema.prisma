generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  TRADER
  LEARNER
  ANALYST
  EXPERT
}

model Group {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  members     User[]    @relation("UserGroups")
  createdAt   DateTime  @default(now())
  posts       Post[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      Role
  groups    Group[]  @relation("UserGroups")
  createdAt DateTime @default(now())
  posts     Post[]
  comments  Comment[]
}

enum PostType {
  TEXT
  IMAGE
  VIDEO
}

model Post {
  id        String    @id @default(uuid())
  content   String
  type      PostType
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  group     Group?    @relation(fields: [groupId], references: [id])
  groupId   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  @@index([groupId])
  @@index([authorId])
  @@index([createdAt])
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  parentId  String?
  replies   Comment[] @relation("CommentReplies")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  reactions Json?     // Optional: for Phase 4.5 (reactions like üëç, üß†, üöÄ)
  @@index([postId])
  @@index([authorId])
  @@index([parentId])
  @@index([createdAt])
}
